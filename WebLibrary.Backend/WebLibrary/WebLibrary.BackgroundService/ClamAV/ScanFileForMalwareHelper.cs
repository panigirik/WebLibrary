using System.Net.Sockets;
using FluentValidation;
using Microsoft.AspNetCore.Http;
using Microsoft.Extensions.Configuration;
using nClam;

namespace WebLibrary.BackgroundService.ClamAV;

public class ScanFileForMalwareHelper
{
    private readonly string _clamAvHost;
    private readonly int _clamAvPort;
    private readonly string _clamAvEnabled;

    public ScanFileForMalwareHelper(IConfiguration configuration)
    {
        _clamAvHost = configuration["ClamAvConnection:Host"] ??
                      throw new InvalidOperationException("ClamAV Host not found in configuration.");
        _clamAvPort = int.Parse(configuration["ClamAvConnection:Port"] ??
                                throw new InvalidOperationException("ClamAV Port is missing or invalid."));
        _clamAvEnabled = configuration["ClamAvConnection:IsEnabled"];
    }

    /// <summary>
    /// Task для осуществления проверки на вредоносное ПО
    /// </summary>
    public async Task ScanFileAsync(IFormFile file)
    {
        if (_clamAvEnabled == "true")
        {
            TestConnectionAsync();
            try
            {

                var clamClient = new ClamClient(_clamAvHost, _clamAvPort);
                using var stream = file.OpenReadStream();
                var scanResult = await clamClient.SendAndScanFileAsync(stream);
                if (scanResult.Result == ClamScanResults.VirusDetected)
                {
                    throw new ValidationException($"Malware detected {scanResult.InfectedFiles}");
                }
            }
            catch (SocketException)
            {
                throw new InvalidOperationException("ClamAV not responding");
            }
        }
    }

    /// <summary>
    /// Тест соединения антивируса
    /// </summary>
    public void TestConnectionAsync()
    {
        try
        {
            var clamClient = new ClamClient(_clamAvHost, _clamAvPort);
            if (!clamClient.PingAsync().GetAwaiter().GetResult())
            {
                Console.WriteLine("ClamAV not responding");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error connecting to ClamAV: {ex.Message}");
        }
    }
}